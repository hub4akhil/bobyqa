### Should give the likestat file as argument 1 and mcmc ini file as arguement 2
### eg: "python bobyqa_ini_generator.py plots/abc.likestats test_planck.ini"

import sys
import os
import numpy as np

input = sys.argv[1]
mcmc_ini = sys.argv[2]
fname = os.path.basename(input)

outfile=mcmc_ini.replace('.ini','_bbqa.ini')
lstat = open(input,'r')
bfini = open(outfile,'w')

#writing the initial settings into the file
text = "DEFAULT("+mcmc_ini+")\n"
text += "action=2\n"
text += "file_root="
text += os.path.splitext(fname)[0]+"_bbqa\n"
text += "minimize_random_start_pos = F\n"
text += "use_fast_slow = T\n"
text += "max_like_radius = 0.005\n"
text += "max_like_iterations = 5000\n"
text += "minimization_points_factor = 4\n"
text += "minimize_loglike_tolerance = 0.05\n"
text += "minimize_separate_fast = F\n"
text += "#if non-zero do some low temperature MCMC steps to check minimum stable\n"
text += "minimize_mcmc_refine_num = 50\n"
text += "minimize_refine_temp = 0.01\n"

# Getting the param ranges for all parameters with likestat value as initial point
stepsize=100

start=bool(False)
for line in lstat:
    if '*' in line:
        break
    L1=[]
    for word in line.split():
        if word == 'parameter':
            start=bool(True)
            break
        if start:
            L1.append(word)
    if start and word != 'parameter':
        if '*' not in L1[0]:
            p1="param["+L1[0]+"] = "
            p2=L1[1]
            p3=float(L1[2])
            p4=float(L1[3])
            p5=(p4-p3)/stepsize
            text += p1 + " " +p2 + " " + str(p3) +" "+ str(p4)+ " "+str(p5)+ " "+str(p5)+"\n"

bfini.write(text)
lstat.close()
bfini.close()
